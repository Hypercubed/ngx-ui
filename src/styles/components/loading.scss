/*!
  Ionicons, v1.4.1
  Created by Ben Sperry for the Ionic Framework, http://ionicons.com/
  https://twitter.com/benjsperry  https://twitter.com/ionicframework
  MIT License: https://github.com/driftyco/ionicons
*/

.icon-loading {
  animation: spin 1s infinite linear;
  font-size: 32px;
  line-height: 0px;
  height: 32px;
  display: inline-block;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% {  transform: rotate(360deg); }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/**
 * Based on Google Material Design Preloader
 *
 * CSS animated SVG implementation of the Google Material Design preloader
 *
 * Reference: http://goo.gl/ZfulRH
 * License: MIT
 * Author: Rudi Theunissen (rudolf.theunissen$gmail.com)
 * Version: 1.1.1
 */

$pi: 355/113;

$easing:     cubic-bezier(.8,.0,.4,.8);

$color:      #02AAFF;
$color-2:    #00FFF4;
$linecap:    butt;
$loops:      5;            // number of points where the arc meets
$arc:        0.7;     // fraction of the circumference that the arc grows to
$perimeter:  120px * $pi;  // circumference of the raw svg inner cricle

.ngx-preloader {
  $speed:      2s;       // animation time for each loop

  // measure to prevent inline block spacing from affecting the outer rotation
  font-size: 0;
  display: inline-block;

  transform: rotateZ(0deg);
   animation: outer ($speed * $loops) linear infinite;
  
  svg {
    transform: rotateZ(0deg);
    animation: inner $speed linear infinite;
    
    circle {
      stroke: $color;
      opacity: 1;
      fill: none;
      stroke-linecap: $linecap;
      stroke-dasharray: 0 $perimeter;
      stroke-dashoffset: 0;
      animation:
        arc $speed $easing infinite,
        // hide $speed step-end infinite,
        color ($speed * 2) step-end infinite
        ;
    }
  }
  
  @keyframes arc {
    0% {
      stroke-dasharray: 0 $perimeter;
      stroke-dashoffset: 0;
      opacity: 0;
    }
    2% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: 0;
      opacity: 1;
    }
    40% {
      stroke-dasharray: $arc * $perimeter $perimeter;
      stroke-dashoffset: 0;
      opacity: 1;
    }
    99% {
      stroke-dasharray: 0 $perimeter;
      stroke-dashoffset: -$arc * $perimeter;
      opacity: 1;
    }
    100% {
      stroke-dasharray: 0 $perimeter;
      stroke-dashoffset: -$perimeter;
      opacity: 0;
    }
  }

  @keyframes inner {
    0% {
      transform: rotateZ(0);
    }
    100% {
      transform: rotateZ(360deg * (1 - $arc));
    }
  }
  
  @keyframes outer {
    0% {
      transform: rotateZ(0deg);
    }
    100% {
      transform: rotateZ(360deg);
    }
  }
  
  @keyframes hide {  // hides a visible flicker at 0%
    0%, 98% {
      opacity: 0;
    }
    2% {
      opacity: 1;
    }
  }
  
  @keyframes color {
    0%, 100% {
      stroke: $color;
    }
    50% {
      stroke: $color-2;
    }
  }
}

.ngx-progress {
  $speed: 10s;       // animation time for each loop

  // measure to prevent inline block spacing from affecting the outer rotation
  font-size: 0;
  display: inline-block;

  transform: rotateZ(0deg);
  // animation: outer ($speed * $loops) linear infinite;
  
  svg {
    transform: rotateZ(-90deg);

    circle {
      stroke: $color;
      opacity: 1;
      fill: none;
      stroke-linecap: $linecap;
      stroke-dasharray: $perimeter, $perimeter;
      stroke-dashoffset: 0;
      animation:
        progress-arc $speed linear infinite,
        progress-color $speed linear infinite;
    }
  }

  @keyframes progress-arc {
    0% {
      stroke-dasharray: 0 $perimeter;
      stroke-dashoffset: 0;
    }
    100% {
      stroke-dasharray: $perimeter $perimeter;
      stroke-dashoffset: 0;
    }
  }
  
  @keyframes progress-color {
    0% {
      stroke: $color-2;
    }
    100% {
      stroke: $color;
    }
  }
}
